#!/usr/bin/env bash

set -eux

TMP_DIR="$(mktemp -d)"

function get_targets {
  find . -maxdepth 3 -name kustomization.yaml -exec dirname {} \;
  find . -mindepth 4 -maxdepth 4 -name kustomization.yaml -exec dirname {} \; | sort | uniq | grep variant
}

function build {
  local ref="$1"
  printf "\n\nChecking out ref: %s\n" "$ref"
  git checkout "$ref" --quiet
  for envpath in $(get_targets); do
    local build_dir
    if ! [ -d "$envpath" ]; then continue; fi
    build_dir="$TMP_DIR/$ref/${envpath#*kustomize/}"
    printf "\n\nCreating build directory: %s\n" "$build_dir"
    mkdir -p "$build_dir"
    echo "Running kustomize"
    kustomize build "$envpath" -o "$build_dir"
  done
}

function main {
  local diff escaped_output output is_empty
  build "$INPUT_HEAD_REF"
  build "$INPUT_BASE_REF"
  set +e
  diff=$(git diff --no-index "$TMP_DIR/$INPUT_BASE_REF" "$TMP_DIR/$INPUT_HEAD_REF")
  set -e
  
  if [[ -z "$diff" ]]; then
    is_empty=true
  else
    is_empty=false
  fi

  output=$(printf "\`\`\` diff\n%s\n\`\`\`\n" "$diff")
  escaped_output=${output//$'\n'/'%0A'}
  
  echo "::set-output name=diff::$escaped_output"
  echo "::set-output name=is_empty::$is_empty"

  printf "\n\Is Empty: %s\n" "$is_empty"
  printf "\n\nOutput: %s\n" "$escaped_output"
}

main
